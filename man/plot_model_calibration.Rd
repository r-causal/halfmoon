% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_calibration.R
\name{plot_model_calibration}
\alias{plot_model_calibration}
\alias{plot_model_calibration.data.frame}
\alias{plot_model_calibration.glm}
\alias{plot_model_calibration.lm}
\alias{plot_model_calibration.halfmoon_calibration}
\title{Create calibration plot}
\usage{
plot_model_calibration(x, ...)

\method{plot_model_calibration}{data.frame}(
  x,
  .fitted,
  .group,
  treatment_level = NULL,
  method = "breaks",
  bins = 10,
  smooth = TRUE,
  conf_level = 0.95,
  window_size = 0.1,
  step_size = window_size/2,
  k = 10,
  include_rug = FALSE,
  include_ribbon = TRUE,
  include_points = TRUE,
  na.rm = FALSE,
  ...
)

\method{plot_model_calibration}{glm}(
  x,
  treatment_level = NULL,
  method = "breaks",
  bins = 10,
  smooth = TRUE,
  conf_level = 0.95,
  window_size = 0.1,
  step_size = window_size/2,
  k = 10,
  include_rug = FALSE,
  include_ribbon = TRUE,
  include_points = TRUE,
  na.rm = FALSE,
  ...
)

\method{plot_model_calibration}{lm}(
  x,
  treatment_level = NULL,
  method = "breaks",
  bins = 10,
  smooth = TRUE,
  conf_level = 0.95,
  window_size = 0.1,
  step_size = window_size/2,
  k = 10,
  include_rug = FALSE,
  include_ribbon = TRUE,
  include_points = TRUE,
  na.rm = FALSE,
  ...
)

\method{plot_model_calibration}{halfmoon_calibration}(
  x,
  include_rug = FALSE,
  include_ribbon = TRUE,
  include_points = TRUE,
  ...
)
}
\arguments{
\item{x}{Either a fitted model object (lm or glm) or a data frame}

\item{...}{Additional arguments passed to methods}

\item{.fitted}{Column name of predicted probabilities (propensity scores).
Can be unquoted (e.g., \code{.fitted}) or quoted (e.g., \code{".fitted"}).}

\item{.group}{Column name of treatment/group variable.
Can be unquoted (e.g., \code{qsmk}) or quoted (e.g., \code{"qsmk"}).}

\item{treatment_level}{Value indicating which level of \code{.group} represents treatment.
If NULL (default), uses the last level for factors or max value for numeric.}

\item{method}{Character; calibration method - "breaks", "logistic", or "windowed".}

\item{bins}{Integer >1; number of bins for the "breaks" method.}

\item{smooth}{Logical; for "logistic" method, use GAM smoothing if available.}

\item{conf_level}{Numeric in (0,1); confidence level for CIs (default = 0.95).}

\item{window_size}{Numeric; size of each window for "windowed" method.}

\item{step_size}{Numeric; distance between window centers for "windowed" method.}

\item{k}{Integer; the basis dimension for GAM smoothing when method = "logistic" and smooth = TRUE. Default is 10.}

\item{include_rug}{Logical; add rug plot showing distribution of predicted probabilities.}

\item{include_ribbon}{Logical; show confidence interval ribbon.}

\item{include_points}{Logical; show points (only for "breaks" and "windowed" methods).}

\item{na.rm}{Logical; if TRUE, drop NA values before computation.}
}
\value{
A ggplot2 object.
}
\description{
Create a calibration plot to assess the agreement between predicted
probabilities and observed treatment rates. This function wraps
\code{geom_calibration()}.
}
\details{
Calibration plots visualize how well predicted probabilities match observed
outcome rates. Since outcomes are binary (0/1), the "observed rate" represents
the proportion of units with outcome = 1 within each prediction group. For
example, among all units with predicted probability around 0.3, we expect
approximately 30\% to actually have the outcome. Perfect calibration occurs
when predicted probabilities equal observed rates (points fall on the 45-degree
line).

The plot supports three calibration assessment methods:
\itemize{
\item \strong{"breaks"}: Bins predictions into groups and compares mean prediction
vs observed rate within each bin
\item \strong{"logistic"}: Fits a logistic regression of outcomes on predictions;
perfect calibration yields slope=1, intercept=0
\item \strong{"windowed"}: Uses sliding windows across the prediction range for
smooth calibration curves
}

The function supports two approaches:
\itemize{
\item For regression models (lm/glm): Extracts fitted values and observed outcomes automatically
\item For data frames: Uses specified columns for fitted values and treatment group
}
}
\examples{
library(ggplot2)

# Method 1: Using data frame
plot_model_calibration(nhefs_weights, .fitted, qsmk)

# With rug plot
plot_model_calibration(nhefs_weights, .fitted, qsmk, include_rug = TRUE)

# Different methods
plot_model_calibration(nhefs_weights, .fitted, qsmk, method = "logistic")
plot_model_calibration(nhefs_weights, .fitted, qsmk, method = "windowed")

# Specify treatment level explicitly
plot_model_calibration(nhefs_weights, .fitted, qsmk, treatment_level = "1")

# Method 2: Using model objects
# Fit a propensity score model
ps_model <- glm(qsmk ~ age + sex + race + education,
                data = nhefs_weights,
                family = binomial())

# Plot calibration from the model
plot_model_calibration(ps_model)

}
\seealso{
\itemize{
\item \code{\link[=geom_calibration]{geom_calibration()}} for the underlying geom
\item \code{\link[=check_model_calibration]{check_model_calibration()}} for numerical calibration metrics
\item \code{\link[=plot_stratified_residuals]{plot_stratified_residuals()}} for residual diagnostic plots
\item \code{\link[=plot_model_roc_curve]{plot_model_roc_curve()}} for ROC curves
\item \code{\link[=plot_qq]{plot_qq()}} for QQ plots
}
}

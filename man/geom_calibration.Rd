% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_calibration.R
\name{geom_calibration}
\alias{geom_calibration}
\title{Geom for calibration plot with confidence intervals}
\usage{
geom_calibration(
  mapping = NULL,
  data = NULL,
  method = "breaks",
  bins = 10,
  smooth = TRUE,
  conf_level = 0.95,
  window_size = 0.1,
  step_size = window_size/2,
  treatment_level = NULL,
  k = 10,
  show_ribbon = TRUE,
  show_points = TRUE,
  position = "identity",
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Aesthetic mapping (must supply x and y if not inherited).
x should be propensity scores/predicted probabilities, y should be treatment variable.}

\item{data}{Data frame or tibble; if NULL, uses ggplot default.}

\item{method}{Character; calibration method - "breaks", "logistic", or "windowed".}

\item{bins}{Integer >1; number of bins for the "breaks" method.}

\item{smooth}{Logical; for "logistic" method, use GAM smoothing if available.}

\item{conf_level}{Numeric in (0,1); confidence level for CIs (default = 0.95).}

\item{window_size}{Numeric; size of each window for "windowed" method.}

\item{step_size}{Numeric; distance between window centers for "windowed" method.}

\item{treatment_level}{Value indicating which level of y represents treatment.
If NULL (default), uses the last level for factors or max value for numeric.
For factors with numeric-looking levels (e.g., "0", "1"), this parameter
works as expected. For factors with non-numeric levels (e.g., "Control",
"Treatment"), the function will attempt to use the higher level as treatment
but may not always correctly identify the intended level. In such cases,
consider converting the factor to numeric before plotting.}

\item{k}{Integer; the basis dimension for GAM smoothing when method = "logistic" and smooth = TRUE. Default is 10.}

\item{show_ribbon}{Logical; show confidence interval ribbon.}

\item{show_points}{Logical; show points (only for "breaks" and "windowed" methods).}

\item{position}{Position adjustment.}

\item{na.rm}{Logical; if TRUE, drop NA values before computation.}

\item{show.legend}{Logical; include in legend.}

\item{inherit.aes}{Logical; inherit aesthetics from ggplot.}

\item{...}{Additional parameters passed to geoms.}
}
\value{
A ggplot2 layer or list of layers
}
\description{
\code{geom_calibration()} creates calibration plots to assess the agreement between predicted
probabilities and observed binary outcomes. It supports three methods:
binning ("breaks"), logistic regression ("logistic"), and windowed ("windowed"), all computed with \code{\link[=check_calibration]{check_calibration()}}.
}
\examples{
library(ggplot2)

# Basic calibration plot using nhefs_weights dataset
# .fitted contains propensity scores, qsmk is the treatment variable
ggplot(nhefs_weights, aes(x = .fitted, y = qsmk)) +
  geom_calibration() +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  labs(x = "Propensity Score", y = "Observed Treatment Rate")

# Using different methods
ggplot(nhefs_weights, aes(x = .fitted, y = qsmk)) +
  geom_calibration(method = "logistic") +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  labs(x = "Propensity Score", y = "Observed Treatment Rate")

# Specify treatment level explicitly
ggplot(nhefs_weights, aes(x = .fitted, y = qsmk)) +
  geom_calibration(treatment_level = "1") +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  labs(x = "Propensity Score", y = "Observed Treatment Rate")

# Windowed method with custom parameters
ggplot(nhefs_weights, aes(x = .fitted, y = qsmk)) +
  geom_calibration(method = "windowed", window_size = 0.2, step_size = 0.1) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  labs(x = "Propensity Score", y = "Observed Treatment Rate")
}

[{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to halfmoon","title":"Contributing to halfmoon","text":"outlines propose change halfmoon, R package propensity score diagnostics visualizations causal inference.","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to halfmoon","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to halfmoon","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to halfmoon","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"malcolmbarrett/halfmoon\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header).","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to halfmoon","text":"generally follow tidyverse style conventions. can use air format . format code, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. Use @inheritParams avoid duplicating parameter documentation (see R/utils-documentation.R common parameter templates) Add @family tags group related functions Include examples demonstrate function’s use use testthat unit tests. Contributions test cases included easier accept. visual tests, use vdiffr helper tests/testthat/helper-vdiffr.R Ensure existing tests pass","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"coding-standards-specific-to-halfmoon","dir":"","previous_headings":"Bigger changes","what":"Coding standards specific to halfmoon","title":"Contributing to halfmoon","text":"Error handling: Use abort() errors warn() warnings (defined R/utils.R) Iteration: Use purrr functions instead loops appropriate Code organization: Use existing helper functions utils files possible Extract anonymous functions >5 lines named functions Place helper functions end file ’re used Helper functions: creating new utilities, check existing helpers: Validation: R/utils-validation.R - input validation functions Group handling: R/utils-group.R - treatment group operations Confidence intervals: R/utils-ci.R - CI calculation helpers General utilities: R/utils.R - error handling, AUC calculation, etc.","code":""},{"path":"https://r-causal.github.io/halfmoon/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to halfmoon","text":"Please note halfmoon project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://r-causal.github.io/halfmoon/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 halfmoon authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r-causal.github.io/halfmoon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Malcolm Barrett. Author, maintainer, copyright holder.","code":""},{"path":"https://r-causal.github.io/halfmoon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barrett M (2025). halfmoon: Techniques Build Better Balance. R package version 0.1.0.9000, https://github.com/r-causal/halfmoon.","code":"@Manual{,   title = {halfmoon: Techniques to Build Better Balance},   author = {Malcolm Barrett},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://github.com/r-causal/halfmoon}, }"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"halfmoon-","dir":"","previous_headings":"","what":"Techniques to Build Better Balance","title":"Techniques to Build Better Balance","text":"Within light darkness, try understand darkness. Within darkness light, look light. Light darkness pair like foot foot behind walking. – Zen teaching poem Sandokai. goal halfmoon cultivate balance propensity score models.","code":""},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Techniques to Build Better Balance","text":"can install recent version halfmoon CRAN : can also install development version halfmoon GitHub :","code":"install.packages(\"halfmoon\") # install.packages(\"devtools\") devtools::install_github(\"r-causal/halfmoon\")"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"example-weighting","dir":"","previous_headings":"","what":"Example: Weighting","title":"Techniques to Build Better Balance","text":"halfmoon includes several techniques assessing balance created propensity score weights.","code":"library(halfmoon) library(ggplot2)  # weighted mirrored histograms ggplot(nhefs_weights, aes(.fitted)) +   geom_mirror_histogram(     aes(group = qsmk),     bins = 50   ) +   geom_mirror_histogram(     aes(fill = qsmk, weight = w_ate),     bins = 50,     alpha = 0.5   ) + scale_y_continuous(labels = abs) # weighted ecdf ggplot(   nhefs_weights,   aes(x = smokeyrs, color = qsmk) ) +   geom_ecdf(aes(weights = w_ato)) +   xlab(\"Smoking Years\") +   ylab(\"Proportion <= x\") # weighted SMDs plot_df <- tidy_smd(   nhefs_weights,   race:active,   .group = qsmk,   .wts = starts_with(\"w_\") )  ggplot(   plot_df,   aes(     x = abs(smd),     y = variable,     group = method,     color = method   ) ) +   geom_love()"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"propensity-score-diagnostics","dir":"","previous_headings":"","what":"Propensity Score Diagnostics","title":"Techniques to Build Better Balance","text":"halfmoon provides comprehensive tools assessing propensity score model quality ROC curves, calibration plots, distributional diagnostics.","code":""},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"roc-curves","dir":"","previous_headings":"Propensity Score Diagnostics","what":"ROC Curves","title":"Techniques to Build Better Balance","text":"Assess well propensity score model discriminates treatment groups, well whether weights create AUC 0.5 (observe randomized experiment):","code":"# Check AUC across different weighting methods roc_results <- roc_curve(   nhefs_weights,   .truth = qsmk,   .estimate = .fitted,   .wts = starts_with(\"w_\") )  auc_results <- check_auc(   nhefs_weights,   .truth = qsmk,   .estimate = .fitted,   .wts = starts_with(\"w_\") )  # Plot ROC curves plot_roc_curve(roc_results) # Display AUC values plot_roc_auc(auc_results)"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"calibration-assessment","dir":"","previous_headings":"Propensity Score Diagnostics","what":"Calibration Assessment","title":"Techniques to Build Better Balance","text":"Evaluate whether predicted probabilities align observed treatment frequencies:","code":"plot_calibration(nhefs_weights, .fitted, qsmk)"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"comprehensive-balance-checking","dir":"","previous_headings":"Propensity Score Diagnostics","what":"Comprehensive Balance Checking","title":"Techniques to Build Better Balance","text":"Assess balance across multiple metrics simultaneously:","code":"# Check balance using multiple metrics balance_results <- check_balance(   nhefs_weights,   .vars = race:active,   .group = qsmk,   .wts = starts_with(\"w_\"),   .metrics = c(\"smd\", \"vr\", \"ks\", \"energy\") )  # Visualize balance across metrics ggplot(balance_results, aes(x = abs(estimate), y = variable)) +   geom_point(aes(color = method)) +   facet_wrap(~ metric, scales = \"free_x\") +   labs(x = \"Balance Statistic\", y = \"Variable\")"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"distributional-balance-with-qq-plots","dir":"","previous_headings":"Propensity Score Diagnostics","what":"Distributional Balance with QQ Plots","title":"Techniques to Build Better Balance","text":"Assess distributional balance treatment groups:","code":"plot_qq(nhefs_weights, age, qsmk, .wts = c(w_ate, w_att))"},{"path":"https://r-causal.github.io/halfmoon/index.html","id":"example-matching","dir":"","previous_headings":"","what":"Example: Matching","title":"Techniques to Build Better Balance","text":"halfmoon also support working matched datasets. Consider two objects MatchIt documentation: One option just look matched dataset halfmoon:  downside can’t compare multiple matching strategies observed dataset; label plot also wrong. halfmoon comes helper function, bind_matches(), creates dataset appropriate task: matches includes binary variable matchit object indicates row included match . Since downweighting 0 equivalent filtering datasets matches, can easily compare multiple matched datasets .wts:  can also extend idea matching indicators weights weighted mirrored histograms, giving us good idea range propensity scores removed dataset.","code":"library(MatchIt) # Default: 1:1 NN PS matching w/o replacement m.out1 <- matchit(treat ~ age + educ + race + nodegree +                    married + re74 + re75, data = lalonde)  # 1:1 NN Mahalanobis distance matching w/ replacement and # exact matching on married and race m.out2 <- matchit(treat ~ age + educ + race + nodegree +                    married + re74 + re75, data = lalonde,                    distance = \"mahalanobis\", replace = TRUE,                   exact = ~ married + race) matched_data <- get_matches(m.out1)  match_smd <- tidy_smd(   matched_data,   c(age, educ, race, nodegree, married, re74, re75),    .group = treat )  love_plot(match_smd) matches <- bind_matches(lalonde, m.out1, m.out2) head(matches) #>      treat age educ   race married nodegree re74 re75       re78 m.out1 m.out2 #> NSW1     1  37   11  black       1        1    0    0  9930.0460      1      1 #> NSW2     1  22    9 hispan       0        1    0    0  3595.8940      1      1 #> NSW3     1  30   12  black       0        0    0    0 24909.4500      1      1 #> NSW4     1  27   11  black       0        1    0    0  7506.1460      1      1 #> NSW5     1  33    8  black       0        1    0    0   289.7899      1      1 #> NSW6     1  22    9  black       0        1    0    0  4056.4940      1      1 many_matched_smds <- tidy_smd(   matches,   c(age, educ, race, nodegree, married, re74, re75),    .group = treat,    .wts = c(m.out1, m.out2) )   love_plot(many_matched_smds) # use the distance as the propensity score matches$ps <- m.out1$distance  ggplot(matches, aes(ps)) +     geom_mirror_histogram(         aes(group = factor(treat)),         bins = 50     ) +     geom_mirror_histogram(         aes(fill = factor(treat), weight = m.out1),         bins = 50,         alpha = 0.5     ) + scale_y_continuous(labels = abs)"},{"path":"https://r-causal.github.io/halfmoon/reference/add_ess_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ESS Table Header — add_ess_header","title":"Add ESS Table Header — add_ess_header","text":"function replaces counts default header gtsummary::tbl_svysummary() tables counts representing Effective Sample Size (ESS). See ess() details.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/add_ess_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ESS Table Header — add_ess_header","text":"","code":"add_ess_header(   x,   header = \"**{level}**  \\nESS = {format(n, digits = 1, nsmall = 1)}\" )"},{"path":"https://r-causal.github.io/halfmoon/reference/add_ess_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ESS Table Header — add_ess_header","text":"x (tbl_svysummary) Object class 'tbl_svysummary' typically created gtsummary::tbl_svysummary(). header (string) String specifying updated header. Review gtsummary::modify_header() details use.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/add_ess_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ESS Table Header — add_ess_header","text":"'gtsummary' table","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/add_ess_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ESS Table Header — add_ess_header","text":"","code":"svy <- survey::svydesign(~1, data = nhefs_weights, weights = ~ w_ate)  gtsummary::tbl_svysummary(svy, include = c(age, sex, smokeyrs)) |>   add_ess_header()     Characteristic       Overall ESS = 1013.31     AGE IN 1971 43 (33, 53)0: MALE 1: FEMALE     0 1,527 (49%)    1 1,599 (51%)YEARS OF SMOKING 24 (14, 33)Abbreviation: ESS = Effective Sample Size     1 Median (Q1, Q3); n (%)     hdr <- paste0(   \"**{level}**  \\n\",   \"N = {n_unweighted}; ESS = {format(n, digits = 1, nsmall = 1)}\" ) gtsummary::tbl_svysummary(svy, by = qsmk, include = c(age, sex, smokeyrs)) |>   add_ess_header(header = hdr)     Characteristic       0 N = 1163; ESS = 1128.61       1 N = 403; ESS = 326.01     AGE IN 1971 43 (33, 52) 43 (33, 53)0: MALE 1: FEMALE      0 764 (49%) 764 (49%)    1 802 (51%) 797 (51%)YEARS OF SMOKING 24 (15, 33) 24 (14, 33)Abbreviation: ESS = Effective Sample Size     1 Median (Q1, Q3); n (%)"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","title":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","text":"Calculates Pearson correlation coefficient two numeric vectors, optional case weights. Uses standard correlation formula unweighted data weighted covariance weighted data.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","text":"","code":"bal_corr(x, y, weights = NULL, na.rm = FALSE)"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","text":"x numeric vector containing first variable. y numeric vector containing second variable. Must length x. weights optional numeric vector case weights. provided, must length x y. weights must non-negative. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values result NA output.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","text":"numeric value representing correlation coefficient -1 1. Returns NA either variable zero variance.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/bal_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Weighted or Unweighted Pearson Correlation — bal_corr","text":"","code":"bal_corr(nhefs_weights$age, nhefs_weights$wt71) #> [1] 0.02219162"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Energy Distance — bal_energy","title":"Balance Energy Distance — bal_energy","text":"Computes energy distance multivariate measure covariate balance groups. Energy distance captures similarity distributions across entire joint distribution covariates, making comprehensive univariate balance measures.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Energy Distance — bal_energy","text":"","code":"bal_energy(   covariates,   group,   weights = NULL,   estimand = NULL,   treatment_level = NULL,   use_improved = TRUE,   standardized = TRUE,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Energy Distance — bal_energy","text":"covariates data frame matrix containing covariates compare. group vector (factor numeric) indicating group membership. binary multi-category treatments, must 2+ unique levels. continuous treatments, numeric. weights optional numeric vector weights. provided, must length rows covariates. weights must non-negative. estimand Character string specifying estimand. Options : NULL (default): Pure -group energy distance comparing distributions \"ATE\": Energy distance weighted reflect balance estimating average treatment effects across entire population \"ATT\": Energy distance weighted reflect balance treated group, measuring well controls match treated distribution \"ATC\": Energy distance weighted reflect balance control group, measuring well treated units match control distribution continuous treatments, NULL supported. treatment_level treatment level ATT/ATC. NULL (default), automatically determined based estimand. use_improved Logical. Use improved energy distance ATE? Default TRUE. TRUE, adds pairwise treatment comparisons better group separation. standardized Logical. continuous treatments, return standardized distance correlation? Default TRUE. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values result error (energy distance computed missing data).","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Energy Distance — bal_energy","text":"numeric value representing energy distance groups. Lower values indicate better balance, 0 indicating perfect balance (identical distributions). continuous treatments, returns distance correlation coefficient (0 = independence, 1 = perfect dependence).","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance Energy Distance — bal_energy","text":"Energy distance based energy statistics framework (Székely & Rizzo, 2004) implemented following Huling & Mak (2024) Huling et al. (2024). calculation uses quadratic form: \\(w^T P w + q^T w + k\\), components depend estimand. binary variables covariates, variance calculated p(1-p) rather sample variance prevent -weighting. continuous treatments, function uses distance correlation instead traditional energy distance, measuring independence treatment covariates.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balance Energy Distance — bal_energy","text":"Huling, J. D., & Mak, S. (2024). Energy Balancing Covariate Distributions. Journal Causal Inference, 12(1) . Huling, J. D., Greifer, N., & Chen, G. (2023). Independence weights causal inference continuous treatments. Journal American Statistical Association, 0(ja), 1–25. doi:10.1080/01621459.2023.2213485 Székely, G. J., & Rizzo, M. L. (2004). Testing equal distributions high dimension. InterStat, 5.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_energy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Energy Distance — bal_energy","text":"","code":"# Binary treatment bal_energy(   covariates = dplyr::select(nhefs_weights, age, wt71, smokeyrs),   group = nhefs_weights$qsmk ) #> [1] 0.05159867  # With weights bal_energy(   covariates = dplyr::select(nhefs_weights, age, wt71, smokeyrs),   group = nhefs_weights$qsmk,   weights = nhefs_weights$w_ate ) #> [1] 0.002998391  # ATT estimand bal_energy(   covariates = dplyr::select(nhefs_weights, age, wt71, smokeyrs),   group = nhefs_weights$qsmk,   weights = nhefs_weights$w_att,   estimand = \"ATT\" ) #> [1] 0.003318796"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"Computes two-sample KS statistic comparing empirical cumulative distribution functions (CDFs) two groups. binary variables, returns absolute difference proportions. continuous variables, computes maximum difference empirical CDFs.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"","code":"bal_ks(covariate, group, weights = NULL, reference_group = NULL, na.rm = FALSE)"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"covariate numeric vector containing covariate values compare. group vector (factor numeric) indicating group membership. Must exactly two unique levels. weights optional numeric vector case weights. provided, must length input vectors. weights must non-negative. reference_group reference group level comparisons. Can either group level value numeric index. NULL (default), uses first level. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"numeric value representing KS statistic. Values range 0 1, 0 indicating identical distributions 1 indicating completely separate distributions.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"Kolmogorov-Smirnov statistic measures maximum difference empirical cumulative distribution functions two groups: $$KS = \\max_x |F_1(x) - F_0(x)|$$ \\(F_1(x)\\) \\(F_0(x)\\) empirical CDFs treatment control groups. binary variables, reduces absolute difference proportions. continuous variables, statistic captures differences entire distribution shape, just means variances. KS statistic ranges 0 (identical distributions) 1 (completely separate distributions). Smaller values indicate better distributional balance groups.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/bal_ks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Kolmogorov-Smirnov (KS) Statistic for Two Groups — bal_ks","text":"","code":"bal_ks(nhefs_weights$age, nhefs_weights$qsmk) #> [1] 0.1295593  # With weights bal_ks(nhefs_weights$wt71, nhefs_weights$qsmk,            weights = nhefs_weights$w_ate) #> [1] 0.03583763"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Standardized Mean Difference (SMD) — bal_smd","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"Calculates standardized mean difference two groups using smd package. common measure effect size comparing group differences accounting variability.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"","code":"bal_smd(   covariate,   group,   weights = NULL,   reference_group = NULL,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"covariate numeric vector containing covariate values compare. group vector (factor numeric) indicating group membership. Must exactly two unique levels. weights optional numeric vector case weights. provided, must length input vectors. weights must non-negative. reference_group reference group level comparisons. Can either group level value numeric index. NULL (default), uses first level. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"numeric value representing standardized mean difference. Positive values indicate comparison group higher mean reference group.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"standardized mean difference (SMD) calculated : $$SMD = \\frac{\\bar{x}_1 - \\bar{x}_0}{\\sqrt{(s_1^2 + s_0^2)/2}}$$ \\(\\bar{x}_1\\) \\(\\bar{x}_0\\) means treatment control groups, \\(s_1^2\\) \\(s_0^2\\) variances. causal inference, SMD values 0.1 smaller often considered indicative good balance treatment groups.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/bal_smd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Standardized Mean Difference (SMD) — bal_smd","text":"","code":"bal_smd(nhefs_weights$age, nhefs_weights$qsmk) #> [1] -0.2822208  # With weights bal_smd(nhefs_weights$wt71, nhefs_weights$qsmk,             weights = nhefs_weights$w_ate) #> [1] 0.009030294"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance Variance Ratio for Two Groups — bal_vr","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"Calculates ratio variances two groups: var(comparison) / var(reference). binary variables, uses p*(1-p) variance formula. continuous variables, uses Bessel's correction weighted sample variance.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"","code":"bal_vr(covariate, group, weights = NULL, reference_group = NULL, na.rm = FALSE)"},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"covariate numeric vector containing covariate values compare. group vector (factor numeric) indicating group membership. Must exactly two unique levels. weights optional numeric vector case weights. provided, must length input vectors. weights must non-negative. reference_group reference group level comparisons. Can either group level value numeric index. NULL (default), uses first level. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"numeric value representing variance ratio. Values greater 1 indicate comparison group higher variance reference group.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"variance ratio compares variability covariate treatment groups. calculated : $$VR = \\frac{s_1^2}{s_0^2}$$ \\(s_1^2\\) \\(s_0^2\\) variances treatment control groups. binary variables (0/1), variance computed \\(p(1-p)\\) \\(p\\) proportion 1s group. continuous variables, weighted sample variance used Bessel's correction weights provided. Values close 1.0 indicate similar variability groups, desirable balance. Values substantially different 1.0 suggest imbalanced variance.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/bal_vr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance Variance Ratio for Two Groups — bal_vr","text":"","code":"bal_vr(nhefs_weights$age, nhefs_weights$qsmk) #> [1] 1.073075 # With weights bal_vr(nhefs_weights$wt71, nhefs_weights$qsmk,                       weights = nhefs_weights$w_ate) #> [1] 1.000901"},{"path":"https://r-causal.github.io/halfmoon/reference/balance_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Documentation for Balance Functions — balance_params","title":"Parameter Documentation for Balance Functions — balance_params","text":"function exists solely document parameters shared across balance functions.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/balance_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Documentation for Balance Functions — balance_params","text":"covariate numeric vector containing covariate values compare. group vector (factor numeric) indicating group membership. Must exactly two unique levels. weights optional numeric vector case weights. provided, must length input vectors. weights must non-negative. reference_group reference group level comparisons. Can either group level value numeric index. NULL (default), uses first level. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_normal_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval using normal approximation — calculate_normal_ci","title":"Calculate confidence interval using normal approximation — calculate_normal_ci","text":"Calculate confidence interval using normal approximation","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_normal_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval using normal approximation — calculate_normal_ci","text":"","code":"calculate_normal_ci(rate, n, conf_level = 0.95)"},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_normal_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval using normal approximation — calculate_normal_ci","text":"rate observed rate/proportion n Sample size conf_level Confidence level (default 0.95)","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_normal_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval using normal approximation — calculate_normal_ci","text":"Named list lower upper bounds","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_prop_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate confidence interval using prop.test — calculate_prop_ci","title":"Calculate confidence interval using prop.test — calculate_prop_ci","text":"Wrapper around prop.test handles errors returns consistent output","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_prop_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate confidence interval using prop.test — calculate_prop_ci","text":"","code":"calculate_prop_ci(x, n, conf_level = 0.95)"},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_prop_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate confidence interval using prop.test — calculate_prop_ci","text":"x Number successes n Number trials conf_level Confidence level (default 0.95)","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/calculate_prop_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate confidence interval using prop.test — calculate_prop_ci","text":"Named list lower upper bounds, NA values error","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Balance Using Weighted ROC Curves — check_auc","title":"Check Balance Using Weighted ROC Curves — check_auc","text":"Computes weighted ROC curves AUC evaluating propensity score balance. causal inference, weighted ROC curve near diagonal (AUC around 0.5) indicates good balance treatment groups.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Balance Using Weighted ROC Curves — check_auc","text":"","code":"check_auc(   .data,   .truth,   .estimate,   .wts,   include_observed = TRUE,   na.rm = TRUE,   treatment_level = NULL )"},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Balance Using Weighted ROC Curves — check_auc","text":".data data frame containing variables. .truth treatment/outcome variable. .estimate propensity score fitted values. .wts Weighting variables (supports tidyselect). include_observed Logical. using .wts, also calculate observed (unweighted) metrics? Defaults TRUE. na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output. treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Balance Using Weighted ROC Curves — check_auc","text":"tibble columns: method Character. weighting method (\"observed\" weight variable name). auc Numeric. ROC AUC value.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Balance Using Weighted ROC Curves — check_auc","text":"Area ROC Curve (AUC) provides single metric assessing propensity score balance. propensity scores achieve perfect balance, weighted distribution scores identical treatment groups, resulting AUC 0.5 (chance performance). AUC values significantly different 0.5 indicate systematic differences propensity score distributions groups, suggesting inadequate balance. Values closer 0.5 indicate better balance achieved weighting scheme. approach complements traditional balance diagnostics focusing specifically propensity score overlap balance.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/check_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Balance Using Weighted ROC Curves — check_auc","text":"","code":"# Check balance for propensity scores check_auc(nhefs_weights, qsmk, .fitted, c(w_ate, w_att)) #> # A tibble: 3 × 2 #>   method     auc #>   <chr>    <dbl> #> 1 observed 0.663 #> 2 w_ate    0.502 #> 3 w_att    0.495  # Without observed results check_auc(nhefs_weights, qsmk, .fitted, w_ate, include_observed = FALSE) #> # A tibble: 1 × 2 #>   method   auc #>   <chr>  <dbl> #> 1 w_ate  0.502"},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Balance Across Multiple Metrics — check_balance","title":"Check Balance Across Multiple Metrics — check_balance","text":"Computes balance statistics multiple variables across different groups optional weighting schemes. function generalizes balance checking supporting multiple metrics (SMD, variance ratio, Kolmogorov-Smirnov, weighted correlation) returns results tidy format.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Balance Across Multiple Metrics — check_balance","text":"","code":"check_balance(   .data,   .vars,   .group,   .wts = NULL,   .metrics = c(\"smd\", \"vr\", \"ks\", \"energy\"),   include_observed = TRUE,   reference_group = 1L,   na.rm = FALSE,   make_dummy_vars = TRUE,   squares = FALSE,   cubes = FALSE,   interactions = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Balance Across Multiple Metrics — check_balance","text":".data data frame containing variables analyze. .vars Variables calculate metrics. Can unquoted variable names, character vector, tidyselect expression. .group Grouping variable, e.g., treatment exposure group. .wts Optional weighting variables. Can unquoted variable names, character vector, NULL. Multiple weights can provided compare different weighting schemes. .metrics Character vector specifying metrics compute. Available options: \"smd\" (standardized mean difference), \"vr\" (variance ratio), \"ks\" (Kolmogorov-Smirnov), \"correlation\" (continuous exposures), \"energy\" (multivariate energy distance). Defaults c(\"smd\", \"vr\", \"ks\", \"energy\"). include_observed Logical. using .wts, also calculate observed (unweighted) metrics? Defaults TRUE. reference_group reference group level use comparisons. Defaults 1 (first level). na.rm logical value indicating whether remove missing values computation. FALSE (default), missing values input produce NA output. make_dummy_vars Logical. Transform categorical variables dummy variables using model.matrix()? Defaults TRUE. TRUE, categorical variables expanded separate binary indicators level. squares Logical. Include squared terms continuous variables? Defaults FALSE. TRUE, adds squared versions numeric variables. cubes Logical. Include cubed terms continuous variables? Defaults FALSE. TRUE, adds cubed versions numeric variables. interactions Logical. Include pairwise interactions variables? Defaults FALSE. TRUE, creates interaction terms variable pairs, excluding interactions levels categorical variable squared/cubed terms.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Balance Across Multiple Metrics — check_balance","text":"tibble columns: variable Character. variable name analyzed. group_level Character. non-reference group level. method Character. weighting method (\"observed\" weight variable name). metric Character. balance metric computed (\"smd\", \"vr\", \"ks\"). estimate Numeric. computed balance statistic.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Balance Across Multiple Metrics — check_balance","text":"function serves comprehensive balance assessment tool computing multiple balance metrics simultaneously. automatically handles different variable types can optionally transform variables (dummy coding, polynomial terms, interactions) computing balance statistics. function supports several balance metrics: SMD (Standardized Mean Difference): Measures effect size groups, values around 0.1 smaller generally indicating good balance Variance Ratio: Compares group variances, values near 1.0 indicating similar variability groups Kolmogorov-Smirnov: Tests distributional differences groups, smaller values indicating better balance Correlation: continuous exposures, measures linear association covariate exposure Energy Distance: Multivariate test comparing entire distributions multiple weighting schemes provided, function computes balance method, enabling comparison different approaches (e.g., ATE vs ATT weights). include_observed parameter controls whether unweighted (\"observed\") balance included results.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/check_balance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Balance Across Multiple Metrics — check_balance","text":"","code":"# Basic usage with all metrics check_balance(nhefs_weights, c(age, wt71), qsmk, .wts = c(w_ate, w_att)) #> # A tibble: 21 × 5 #>    variable group_level method   metric estimate #>    <chr>    <chr>       <chr>    <chr>     <dbl> #>  1 age      0           observed ks      0.130   #>  2 age      0           w_ate    ks      0.0293  #>  3 age      0           w_att    ks      0.0362  #>  4 age      0           observed smd     0.282   #>  5 age      0           w_ate    smd     0.00585 #>  6 age      0           w_att    smd     0.0122  #>  7 age      0           observed vr      1.07    #>  8 age      0           w_ate    vr      1.01    #>  9 age      0           w_att    vr      1.01    #> 10 wt71     0           observed ks      0.0700  #> # ℹ 11 more rows  # With specific metrics only check_balance(nhefs_weights, c(age, wt71), qsmk, .metrics = c(\"smd\", \"energy\")) #> # A tibble: 3 × 5 #>   variable group_level method   metric estimate #>   <chr>    <chr>       <chr>    <chr>     <dbl> #> 1 age      0           observed smd      0.282  #> 2 wt71     0           observed smd      0.133  #> 3 NA       NA          observed energy   0.0503  # Exclude observed results check_balance(nhefs_weights, c(age, wt71), qsmk, .wts = w_ate, include_observed = FALSE) #> # A tibble: 7 × 5 #>   variable group_level method metric estimate #>   <chr>    <chr>       <chr>  <chr>     <dbl> #> 1 age      0           w_ate  ks      0.0293  #> 2 age      0           w_ate  smd     0.00585 #> 3 age      0           w_ate  vr      1.01    #> 4 wt71     0           w_ate  ks      0.0358  #> 5 wt71     0           w_ate  smd    -0.00903 #> 6 wt71     0           w_ate  vr      1.00    #> 7 NA       NA          w_ate  energy  0.00217  # Use correlation for continuous exposure check_balance(mtcars, c(mpg, hp), disp, .metrics = c(\"correlation\", \"energy\")) #> # A tibble: 3 × 5 #>   variable group_level method   metric      estimate #>   <chr>    <chr>       <chr>    <chr>          <dbl> #> 1 hp       disp        observed correlation    0.791 #> 2 mpg      disp        observed correlation   -0.848 #> 3 NA       NA          observed energy         0.882  # With dummy variables for categorical variables (default behavior) check_balance(nhefs_weights, c(age, sex, race), qsmk) #> # A tibble: 10 × 5 #>    variable group_level method   metric estimate #>    <chr>    <chr>       <chr>    <chr>     <dbl> #>  1 age      0           observed ks       0.130  #>  2 age      0           observed smd      0.282  #>  3 age      0           observed vr       1.07   #>  4 race     0           observed ks       0.0568 #>  5 race     0           observed smd     -0.177  #>  6 race     0           observed vr       0.652  #>  7 sex      0           observed ks       0.0799 #>  8 sex      0           observed smd     -0.160  #>  9 sex      0           observed vr       0.996  #> 10 NA       NA          observed energy   0.0641  # Without dummy variables for categorical variables check_balance(nhefs_weights, c(age, sex, race), qsmk, make_dummy_vars = FALSE) #> # A tibble: 10 × 5 #>    variable group_level method   metric estimate #>    <chr>    <chr>       <chr>    <chr>     <dbl> #>  1 age      0           observed ks       0.130  #>  2 age      0           observed smd      0.282  #>  3 age      0           observed vr       1.07   #>  4 race     0           observed ks      NA      #>  5 race     0           observed smd     NA      #>  6 race     0           observed vr      NA      #>  7 sex      0           observed ks      NA      #>  8 sex      0           observed smd     NA      #>  9 sex      0           observed vr      NA      #> 10 NA       NA          observed energy   0.0641"},{"path":"https://r-causal.github.io/halfmoon/reference/check_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute calibration data for binary outcomes — check_calibration","title":"Compute calibration data for binary outcomes — check_calibration","text":"check_calibration() summarizes predicted probabilities observed outcomes, computing mean prediction, observed rate, counts, confidence intervals. Calibration represents agreement predicted probabilities observed outcomes. Supports multiple methods calibration assessment.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute calibration data for binary outcomes — check_calibration","text":"","code":"check_calibration(   data,   .fitted,   .group,   treatment_level = NULL,   method = c(\"breaks\", \"logistic\", \"windowed\"),   bins = 10,   binning_method = c(\"equal_width\", \"quantile\"),   smooth = TRUE,   conf_level = 0.95,   window_size = 0.1,   step_size = window_size/2,   k = 10,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/check_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute calibration data for binary outcomes — check_calibration","text":"data data frame containing data. .fitted Column name predicted probabilities (numeric 0 1). Can unquoted (e.g., p) quoted (e.g., \"p\"). .group Column name treatment/group variable. Can unquoted (e.g., g) quoted (e.g., \"g\"). treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables. method Character; calibration method. One : \"breaks\", \"logistic\", \"windowed\". bins Integer > 1; number bins \"breaks\" method. binning_method \"equal_width\" \"quantile\" bin creation (breaks method ). smooth Logical; \"logistic\" method, use GAM smoothing via mgcv package. conf_level Numeric (0,1); confidence level CIs (default = 0.95). window_size Numeric; size window \"windowed\" method. step_size Numeric; distance window centers \"windowed\" method. k Integer; basis dimension GAM smoothing method = \"logistic\" smooth = TRUE. Default 10. na.rm Logical; TRUE, drop NA values summarizing.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute calibration data for binary outcomes — check_calibration","text":"tibble columns: \"breaks\" method: .bin: integer bin index predicted_rate: mean predicted probability bin observed_rate: observed treatment rate bin count: number observations bin lower: lower bound CI observed_rate upper: upper bound CI observed_rate \"logistic\" \"windowed\" methods: predicted_rate: predicted probability values observed_rate: calibrated outcome rate lower: lower bound CI upper: upper bound CI","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute calibration data for binary outcomes — check_calibration","text":"","code":"# Using the included `nhefs_weights` dataset # `.fitted` contains propensity scores, and `qsmk` is the treatment variable check_calibration(nhefs_weights, .fitted, qsmk) #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> # A tibble: 10 × 6 #>     .bin predicted_rate observed_rate count  lower upper #>    <int>          <dbl>         <dbl> <int>  <dbl> <dbl> #>  1     1         0.0971        0.0649   154 0.0333 0.119 #>  2     2         0.162         0.166    355 0.130  0.210 #>  3     3         0.230         0.254    445 0.215  0.298 #>  4     4         0.302         0.294    293 0.243  0.350 #>  5     5         0.372         0.368    155 0.293  0.449 #>  6     6         0.443         0.372     86 0.272  0.484 #>  7     7         0.516         0.511     45 0.360  0.661 #>  8     8         0.591         0.773     22 0.542  0.913 #>  9     9         0.648         0.375      8 0.102  0.741 #> 10    10         0.738         1          3 1      1      # Logistic method with smoothing check_calibration(nhefs_weights, .fitted, qsmk, method = \"logistic\") #> # A tibble: 100 × 4 #>    predicted_rate observed_rate     lower     upper #>             <dbl>     <dbl[1d]> <dbl[1d]> <dbl[1d]> #>  1         0.0510        0.0651    0.0363     0.114 #>  2         0.0583        0.0694    0.0404     0.117 #>  3         0.0657        0.0740    0.0448     0.120 #>  4         0.0730        0.0789    0.0497     0.123 #>  5         0.0803        0.0840    0.0549     0.126 #>  6         0.0877        0.0894    0.0606     0.130 #>  7         0.0950        0.0952    0.0666     0.134 #>  8         0.102         0.101     0.0730     0.139 #>  9         0.110         0.108     0.0797     0.144 #> 10         0.117         0.114     0.0868     0.149 #> # ℹ 90 more rows  # Windowed method check_calibration(nhefs_weights, .fitted, qsmk, method = \"windowed\") #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.7, #> 0.75, 0.8 (n = 5, 3, 1). Confidence intervals may be unreliable. Consider using #> a larger window size or a different calibration method. #> # A tibble: 16 × 4 #>    predicted_rate observed_rate  lower upper #>             <dbl>         <dbl>  <dbl> <dbl> #>  1           0.05        0.0506 0.0163 0.131 #>  2           0.1         0.106  0.0731 0.152 #>  3           0.15        0.156  0.124  0.193 #>  4           0.2         0.212  0.180  0.248 #>  5           0.25        0.258  0.223  0.296 #>  6           0.3         0.290  0.248  0.337 #>  7           0.35        0.327  0.274  0.386 #>  8           0.4         0.370  0.301  0.444 #>  9           0.45        0.420  0.331  0.514 #> 10           0.5         0.467  0.352  0.585 #> 11           0.55        0.562  0.413  0.702 #> 12           0.6         0.724  0.525  0.866 #> 13           0.65        0.625  0.359  0.837 #> 14           0.7         0.6    0.170  0.927 #> 15           0.75        1      1      1     #> 16           0.8         1      1      1"},{"path":"https://r-causal.github.io/halfmoon/reference/check_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Documentation for Check Functions — check_params","title":"Parameter Documentation for Check Functions — check_params","text":"function exists solely document parameters shared across check functions.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/check_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Documentation for Check Functions — check_params","text":".data data frame containing variables analyze. .vars Variables calculate metrics. Can unquoted variable names, character vector, tidyselect expression. .group Grouping variable, e.g., treatment exposure group. .wts Optional weighting variables. Can unquoted variable names, character vector, NULL. Multiple weights can provided compare different weighting schemes. include_observed Logical. using .wts, also calculate observed (unweighted) metrics? Defaults TRUE.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Effective Sample Size (ESS) — ess","title":"Calculate the Effective Sample Size (ESS) — ess","text":"function computes effective sample size (ESS) given vector weights, using classical \\((\\sum w)^2 / \\sum(w^2)\\) formula (sometimes referred \"Kish's effective sample size\").","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Effective Sample Size (ESS) — ess","text":"","code":"ess(wts)"},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Effective Sample Size (ESS) — ess","text":"wts numeric vector weights (e.g., survey inverse-probability weighting).","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Effective Sample Size (ESS) — ess","text":"single numeric value representing effective sample size.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Effective Sample Size (ESS) — ess","text":"effective sample size (ESS) reflects many observations equally weighted. weights vary substantially, ESS can much smaller actual number observations. Formally: $$   \\mathrm{ESS} = \\frac{\\left(\\sum_i w_i\\right)^2}{\\sum_i w_i^2}. $$ Diagnostic Value: Indicator Weight Concentration: large discrepancy ESS actual sample size indicates observations carry disproportionately large weights, effectively reducing usable information dataset. Variance Inflation: small ESS signals weighted estimates sensitive handful observations, inflating variance standard errors. Practical Guidance: ESS much lower total sample size, advisable investigate weights extremely large small. Techniques like weight trimming stabilized weights might employed mitigate issue","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Effective Sample Size (ESS) — ess","text":"","code":"# Suppose we have five observations with equal weights wts1 <- rep(1.2, 5) # returns 5, because all weights are equal ess(wts1) #> [1] 5  # If weights vary more, smaller than 5 wts2 <- c(0.5, 2, 2, 0.1, 0.8) ess(wts2) #> [1] 3.276404"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom for calibration plot with confidence intervals — geom_calibration","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"geom_calibration() creates calibration plots assess agreement predicted probabilities observed binary outcomes. supports three methods: binning (\"breaks\"), logistic regression (\"logistic\"), windowed (\"windowed\"), computed check_calibration().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"","code":"geom_calibration(   mapping = NULL,   data = NULL,   method = \"breaks\",   bins = 10,   binning_method = \"equal_width\",   smooth = TRUE,   conf_level = 0.95,   window_size = 0.1,   step_size = window_size/2,   treatment_level = NULL,   k = 10,   show_ribbon = TRUE,   show_points = TRUE,   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"mapping Aesthetic mapping (must supply estimate truth inherited). estimate propensity scores/predicted probabilities, truth treatment variable. data Data frame tibble; NULL, uses ggplot default. method Character; calibration method - \"breaks\", \"logistic\", \"windowed\". bins Integer >1; number bins \"breaks\" method. binning_method \"equal_width\" \"quantile\" bin creation (breaks method ). smooth Logical; \"logistic\" method, use GAM smoothing available. conf_level Numeric (0,1); confidence level CIs (default = 0.95). window_size Numeric; size window \"windowed\" method. step_size Numeric; distance window centers \"windowed\" method. treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables. k Integer; basis dimension GAM smoothing method = \"logistic\" smooth = TRUE. Default 10. show_ribbon Logical; show confidence interval ribbon. show_points Logical; show points (\"breaks\" \"windowed\" methods). position Position adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend Logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed layer().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"ggplot2 layer list layers","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"geom provides ggplot2 layer creating calibration plots confidence intervals. geom automatically computes calibration statistics using specified method renders appropriate geometric elements (points, lines, ribbons) visualize relationship predicted observed rates. three methods offer different approaches calibration assessment: \"breaks\": Discrete binning approach, useful understanding calibration across prediction ranges sufficient sample sizes \"logistic\": Regression-based approach can include smoothing continuous calibration curves \"windowed\": Sliding window approach providing smooth curves without requiring additional packages","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geom for calibration plot with confidence intervals — geom_calibration","text":"","code":"library(ggplot2)  # Basic calibration plot using nhefs_weights dataset # .fitted contains propensity scores, qsmk is the treatment variable ggplot(nhefs_weights, aes(estimate = .fitted, truth = qsmk)) +   geom_calibration() +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +   labs(x = \"Propensity Score\", y = \"Observed Treatment Rate\") #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method.   # Using different methods ggplot(nhefs_weights, aes(estimate = .fitted, truth = qsmk)) +   geom_calibration(method = \"logistic\") +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +   labs(x = \"Propensity Score\", y = \"Observed Treatment Rate\")   # Specify treatment level explicitly ggplot(nhefs_weights, aes(estimate = .fitted, truth = qsmk)) +   geom_calibration(treatment_level = \"1\") +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +   labs(x = \"Propensity Score\", y = \"Observed Treatment Rate\") #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method.   # Windowed method with custom parameters ggplot(nhefs_weights, aes(estimate = .fitted, truth = qsmk)) +   geom_calibration(method = \"windowed\", window_size = 0.2, step_size = 0.1) +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +   labs(x = \"Propensity Score\", y = \"Observed Treatment Rate\") #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.8 #> (n = 3). Confidence intervals may be unreliable. Consider using a larger window #> size or a different calibration method. #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.8 #> (n = 3). Confidence intervals may be unreliable. Consider using a larger window #> size or a different calibration method. #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.8 #> (n = 3). Confidence intervals may be unreliable. Consider using a larger window #> size or a different calibration method."},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"empirical cumulative distribution function (ECDF) provides alternative visualization distribution. geom_ecdf() similar ggplot2::stat_ecdf() can also calculate weighted ECDFs.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"","code":"geom_ecdf(   mapping = NULL,   data = NULL,   geom = \"step\",   position = \"identity\",   ...,   n = NULL,   pad = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. n NULL, interpolate. NULL, number points interpolate . pad TRUE, pad ecdf additional points (-Inf, 0) (Inf, 1) na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"geom","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"ECDF plots show cumulative distribution function \\(F(x) = P(X \\leq x)\\), displaying proportion observations fall value. comparing treatment groups, overlapping ECDF curves indicate similar distributions thus good balance. ECDF plots closely related quantile-quantile (QQ) plots (see geom_qq2()). ECDF plots show \\(F(x)\\) group, QQ plots show inverse relationship plotting \\(F_1^{-1}(p)\\) vs \\(F_2^{-1}(p)\\). visualize distributional information: ECDF plots: Compare cumulative probabilities value QQ plots: Compare values quantile Choose ECDF plots want see full cumulative distribution comparing multiple groups simultaneously. Choose QQ plots want directly compare two groups easy--interpret 45-degree reference line.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"addition aesthetics ggplot2::stat_ecdf(), geom_ecdf() also accepts: weights","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_ecdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted and unweighted empirical cumulative distributions — geom_ecdf","text":"","code":"library(ggplot2)  ggplot(   nhefs_weights,   aes(x = smokeyrs, color = qsmk) ) +   geom_ecdf(aes(weights = w_ato)) +   xlab(\"Smoking Years\") +   ylab(\"Proportion <= x\")"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mirrored density plots — geom_mirror_density","title":"Create mirrored density plots — geom_mirror_density","text":"Create mirrored density plots","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mirrored density plots — geom_mirror_density","text":"","code":"geom_mirror_density(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   outline.type = \"upper\" )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mirrored density plots — geom_mirror_density","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. always \"density\" (default). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). outline.type Type outline area; \"\" draws upper lower lines, \"upper\"/\"lower\" draws respective lines . \"full\" draws closed polygon around area.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mirrored density plots — geom_mirror_density","text":"geom","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mirrored density plots — geom_mirror_density","text":"","code":"library(ggplot2) ggplot(nhefs_weights, aes(.fitted)) +   geom_mirror_density(     aes(group = qsmk),     bw = 0.02   ) +   geom_mirror_density(     aes(fill = qsmk, weight = w_ate),     bw = 0.02,     alpha = 0.5   ) +   scale_y_continuous(labels = abs)"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mirrored histograms — geom_mirror_histogram","title":"Create mirrored histograms — geom_mirror_histogram","text":"Create mirrored histograms","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mirrored histograms — geom_mirror_histogram","text":"","code":"geom_mirror_histogram(   mapping = NULL,   data = NULL,   position = \"stack\",   ...,   binwidth = NULL,   bins = NULL,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mirrored histograms — geom_mirror_histogram","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. binwidth width bins. Can specified numeric value function calculates width unscaled x. , \"unscaled x\" refers original x values data, application scale transformation. specifying function along grouping structure, function called per group. default use number bins bins, covering range data. always override value, exploring multiple widths find best illustrate stories data. bin width date variable number days time; bin width time variable number seconds. bins Number bins. Overridden binwidth. Defaults 30. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_histogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mirrored histograms — geom_mirror_histogram","text":"geom","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_mirror_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mirrored histograms — geom_mirror_histogram","text":"","code":"library(ggplot2) ggplot(nhefs_weights, aes(.fitted)) +   geom_mirror_histogram(     aes(group = qsmk),     bins = 50   ) +   geom_mirror_histogram(     aes(fill = qsmk, weight = w_ate),     bins = 50,     alpha = 0.5   ) +   scale_y_continuous(labels = abs)"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create 2-dimensional QQ geometries — geom_qq2","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"geom_qq2() geom creating quantile-quantile plots support weighted comparisons. QQ plots compare quantiles two distributions, making useful assessing distributional balance causal inference. opposed geom_qq(), geom compare variable theoretical distribution, rather two group's distributions, e.g., treatment vs. control.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"","code":"geom_qq2(   mapping = NULL,   data = NULL,   stat = \"qq2\",   position = \"identity\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE,   quantiles = seq(0.01, 0.99, 0.01),   treatment_level = NULL,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"mapping Set aesthetic mappings. Required aesthetics sample (variable) treatment (group). treatment aesthetic can factor, character, numeric. Optional aesthetics include weight weighting. data Data frame use. specified, inherits plot. stat Statistical transformation use. Default \"qq2\". position Position adjustment. Default \"identity\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend Logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . quantiles Numeric vector quantiles compute. Default seq(0.01, 0.99, 0.01) 99 quantiles. treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables. ... arguments passed layer().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"ggplot2 layer.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"Quantile-quantile (QQ) plots visualize distributions variable differ treatment groups plotting corresponding quantiles . distributions identical, points fall 45-degree line (y = x). Deviations line indicate differences distributions. QQ plots closely related empirical cumulative distribution function (ECDF) plots (see geom_ecdf()). ECDF plots show \\(F(x) = P(X \\leq x)\\) group, QQ plots show \\(F_1^{-1}(p)\\) vs \\(F_2^{-1}(p)\\), essentially inverse relationship. approaches visualize information distributional differences, QQ plots make easier spot deviations 45-degree reference line.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_qq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create 2-dimensional QQ geometries — geom_qq2","text":"","code":"library(ggplot2)  # Basic QQ plot ggplot(nhefs_weights, aes(sample = age, treatment = qsmk)) +   geom_qq2() +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\")   # With weighting ggplot(nhefs_weights, aes(sample = age, treatment = qsmk, weight = w_ate)) +   geom_qq2() +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\")   # Compare multiple weights using long format long_data <- tidyr::pivot_longer(   nhefs_weights,   cols = c(w_ate, w_att),   names_to = \"weight_type\",   values_to = \"weight\" )  ggplot(long_data, aes(color = weight_type)) +   geom_qq2(aes(sample = age, treatment = qsmk, weight = weight)) +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\")"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve Geom for Causal Inference — geom_roc","title":"ROC Curve Geom for Causal Inference — geom_roc","text":"ggplot2 geom plotting ROC curves optional weighting. Emphasizes balance interpretation AUC around 0.5 indicates good balance.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve Geom for Causal Inference — geom_roc","text":"","code":"geom_roc(   mapping = NULL,   data = NULL,   stat = \"roc\",   position = \"identity\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE,   linewidth = 0.5,   treatment_level = NULL,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/geom_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve Geom for Causal Inference — geom_roc","text":"mapping Set aesthetic mappings. Must include estimate (propensity scores/predictions) truth (treatment/outcome variable). specified, inherits plot. data Data frame use. specified, inherits plot. stat Statistical transformation use. Default \"roc\". position Position adjustment. Default \"identity\". na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend Logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . linewidth Width ROC curve line. Default 0.5. treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables. ... arguments passed layer().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/geom_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ROC Curve Geom for Causal Inference — geom_roc","text":"ggplot2 layer.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/geom_roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ROC Curve Geom for Causal Inference — geom_roc","text":"","code":"# Basic usage library(ggplot2) ggplot(nhefs_weights, aes(estimate = .fitted, truth = qsmk)) +   geom_roc() +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\")   # With grouping by weight long_data <- tidyr::pivot_longer(   nhefs_weights,   cols = c(w_ate, w_att),   names_to = \"weight_type\",   values_to = \"weight\" )  ggplot(long_data, aes(estimate = .fitted, truth = qsmk, weight = weight)) +   geom_roc(aes(color = weight_type)) +   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\")"},{"path":"https://r-causal.github.io/halfmoon/reference/get_z_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Get z-score for confidence level — get_z_score","title":"Get z-score for confidence level — get_z_score","text":"Get z-score confidence level","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/get_z_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get z-score for confidence level — get_z_score","text":"","code":"get_z_score(conf_level = 0.95)"},{"path":"https://r-causal.github.io/halfmoon/reference/get_z_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get z-score for confidence level — get_z_score","text":"conf_level Confidence level (default 0.95)","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/get_z_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get z-score for confidence level — get_z_score","text":"z-score given confidence level","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ggplot2_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Documentation for ggplot2 Functions — ggplot2_params","title":"Parameter Documentation for ggplot2 Functions — ggplot2_params","text":"Parameter Documentation ggplot2 Functions","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/ggplot2_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Documentation for ggplot2 Functions — ggplot2_params","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. data data displayed layer. NULL, default, data inherited plot data specified call ggplot(). stat statistical transformation use data layer. position Position adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend Logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . ... arguments passed layer().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/nhefs_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"NHEFS with various propensity score weights — nhefs_weights","title":"NHEFS with various propensity score weights — nhefs_weights","text":"dataset containing various propensity score weights causaldata::nhefs_complete.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/nhefs_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NHEFS with various propensity score weights — nhefs_weights","text":"","code":"nhefs_weights"},{"path":"https://r-causal.github.io/halfmoon/reference/nhefs_weights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NHEFS with various propensity score weights — nhefs_weights","text":"data frame 1566 rows 14 variables: qsmk Quit smoking race Race age Age sex Sex education Education level smokeintensity Smoking intensity smokeyrs Number smoke-years exercise Exercise level active Daily activity level wt71 Participant weight 1971 (baseline) w_ate ATE weight w_att ATT weight w_atc ATC weight w_atm ATM weight w_ato ATO weight .fitted Propensity score","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Create calibration plot — plot_calibration","title":"Create calibration plot — plot_calibration","text":"Create calibration plot assess agreement predicted probabilities observed treatment rates. function wraps geom_calibration().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create calibration plot — plot_calibration","text":"","code":"plot_calibration(x, ...)  # S3 method for class 'data.frame' plot_calibration(   x,   .fitted,   .group,   treatment_level = NULL,   method = \"breaks\",   bins = 10,   smooth = TRUE,   conf_level = 0.95,   window_size = 0.1,   step_size = window_size/2,   k = 10,   include_rug = FALSE,   include_ribbon = TRUE,   include_points = TRUE,   na.rm = FALSE,   ... )  # S3 method for class 'glm' plot_calibration(   x,   treatment_level = NULL,   method = \"breaks\",   bins = 10,   smooth = TRUE,   conf_level = 0.95,   window_size = 0.1,   step_size = window_size/2,   k = 10,   include_rug = FALSE,   include_ribbon = TRUE,   include_points = TRUE,   na.rm = FALSE,   ... )  # S3 method for class 'lm' plot_calibration(   x,   treatment_level = NULL,   method = \"breaks\",   bins = 10,   smooth = TRUE,   conf_level = 0.95,   window_size = 0.1,   step_size = window_size/2,   k = 10,   include_rug = FALSE,   include_ribbon = TRUE,   include_points = TRUE,   na.rm = FALSE,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create calibration plot — plot_calibration","text":"x Either fitted model object (lm glm) data frame ... Additional arguments passed methods .fitted Column name predicted probabilities (propensity scores). Can unquoted (e.g., .fitted) quoted (e.g., \".fitted\"). .group Column name treatment/group variable. Can unquoted (e.g., qsmk) quoted (e.g., \"qsmk\"). treatment_level Value indicating level .group represents treatment. NULL (default), uses last level factors max value numeric. method Character; calibration method - \"breaks\", \"logistic\", \"windowed\". bins Integer >1; number bins \"breaks\" method. smooth Logical; \"logistic\" method, use GAM smoothing available. conf_level Numeric (0,1); confidence level CIs (default = 0.95). window_size Numeric; size window \"windowed\" method. step_size Numeric; distance window centers \"windowed\" method. k Integer; basis dimension GAM smoothing method = \"logistic\" smooth = TRUE. Default 10. include_rug Logical; add rug plot showing distribution predicted probabilities. include_ribbon Logical; show confidence interval ribbon. include_points Logical; show points (\"breaks\" \"windowed\" methods). na.rm Logical; TRUE, drop NA values computation.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create calibration plot — plot_calibration","text":"ggplot2 object.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create calibration plot — plot_calibration","text":"Calibration plots visualize well predicted probabilities match observed outcome rates. Since outcomes binary (0/1), \"observed rate\" represents proportion units outcome = 1 within prediction group. example, among units predicted probability around 0.3, expect approximately 30% actually outcome. Perfect calibration occurs predicted probabilities equal observed rates (points fall 45-degree line). plot supports three calibration assessment methods: \"breaks\": Bins predictions groups compares mean prediction vs observed rate within bin \"logistic\": Fits logistic regression outcomes predictions; perfect calibration yields slope=1, intercept=0 \"windowed\": Uses sliding windows across prediction range smooth calibration curves function supports two approaches: regression models (lm/glm): Extracts fitted values observed outcomes automatically data frames: Uses specified columns fitted values treatment group","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/plot_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create calibration plot — plot_calibration","text":"","code":"library(ggplot2)  # Method 1: Using data frame plot_calibration(nhefs_weights, .fitted, qsmk) #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method.   # With rug plot plot_calibration(nhefs_weights, .fitted, qsmk, include_rug = TRUE) #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method.   # Different methods plot_calibration(nhefs_weights, .fitted, qsmk, method = \"logistic\")  plot_calibration(nhefs_weights, .fitted, qsmk, method = \"windowed\") #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.7, #> 0.75, 0.8 (n = 5, 3, 1). Confidence intervals may be unreliable. Consider using #> a larger window size or a different calibration method. #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.7, #> 0.75, 0.8 (n = 5, 3, 1). Confidence intervals may be unreliable. Consider using #> a larger window size or a different calibration method. #> Warning: Small sample sizes or extreme proportions detected in windows centered at 0.7, #> 0.75, 0.8 (n = 5, 3, 1). Confidence intervals may be unreliable. Consider using #> a larger window size or a different calibration method.   # Specify treatment level explicitly plot_calibration(nhefs_weights, .fitted, qsmk, treatment_level = \"1\") #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 9, 10 (n = 8, 3). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method.   # Method 2: Using model objects # Fit a propensity score model ps_model <- glm(qsmk ~ age + sex + race + education,                 data = nhefs_weights,                 family = binomial())  # Plot calibration from the model plot_calibration(ps_model) #> Warning: Small sample sizes or extreme proportions detected in bins 10 (n = 4). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 10 (n = 4). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method. #> Warning: Small sample sizes or extreme proportions detected in bins 10 (n = 4). #> Confidence intervals may be unreliable. Consider using fewer bins or a #> different calibration method."},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mirror distribution plots — plot_mirror_distributions","title":"Create mirror distribution plots — plot_mirror_distributions","text":"Create mirror distribution plots (histograms density plots) compare distribution variables treatment groups weighting. function helps assess covariate balance visualizing distributions side--side one group mirrored axis.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mirror distribution plots — plot_mirror_distributions","text":"","code":"plot_mirror_distributions(   .data,   .var,   .group,   .wts = NULL,   type = c(\"histogram\", \"density\"),   mirror_axis = \"y\",   bins = NULL,   binwidth = NULL,   bw = \"nrd0\",   adjust = 1,   include_unweighted = TRUE,   alpha = 0.6,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mirror distribution plots — plot_mirror_distributions","text":".data data frame containing variables. .var variable plot. Supports tidyselect syntax. Can unquoted. .group Column name treatment/group variable. Supports tidyselect syntax. Can unquoted. Must exactly 2 levels. .wts Optional weighting variable(s). Can unquoted variable names, tidyselect syntax, character vector, NULL. Multiple weights can provided compare different weighting schemes. Default NULL (unweighted). type Character; type plot - \"histogram\" \"density\". Default \"histogram\". mirror_axis Character; axis mirror - \"y\" (default) \"x\". bins Integer; number bins histogram. used type = \"histogram\". binwidth Numeric; width bins histogram. used type = \"histogram\". bins binwidth specified, binwidth takes precedence. bw Bandwidth density estimation. used type = \"density\". Can numeric character (e.g., \"nrd0\", \"sj\"). adjust Numeric; bandwidth adjustment factor density. used type = \"density\". Default 1. include_unweighted Logical. using .wts, also show unweighted distribution? Defaults TRUE. alpha Numeric; transparency level fills. Default 0.6. na.rm Logical; TRUE, drop NA values plotting.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mirror distribution plots — plot_mirror_distributions","text":"ggplot2 object.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create mirror distribution plots — plot_mirror_distributions","text":"Mirror distribution plots display distribution one group x-axis group (mirrored). makes easy compare distributions assess balance. function supports histogram density plot types. using weights, function can display weighted unweighted distributions comparison. Multiple weighting schemes can compared providing multiple weight variables.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/plot_mirror_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mirror distribution plots — plot_mirror_distributions","text":"","code":"library(ggplot2)  # Basic histogram (unweighted) plot_mirror_distributions(nhefs_weights, age, qsmk) #> `stat_mirror_count()` using `bins = 30`. Pick better value with `binwidth`.   # Density plot instead of histogram plot_mirror_distributions(nhefs_weights, age, qsmk, type = \"density\")   # With weighting plot_mirror_distributions(nhefs_weights, age, qsmk, .wts = w_ate) #> `stat_mirror_count()` using `bins = 30`. Pick better value with `binwidth`.   # Compare multiple weighting schemes plot_mirror_distributions(nhefs_weights, age, qsmk, .wts = c(w_ate, w_att)) #> `stat_mirror_count()` using `bins = 30`. Pick better value with `binwidth`.   # Customize appearance plot_mirror_distributions(   nhefs_weights, age, qsmk,   .wts = w_ate,   type = \"density\",   alpha = 0.7 )   # Without unweighted comparison plot_mirror_distributions(   nhefs_weights, age, qsmk,   .wts = w_ate,   include_unweighted = FALSE ) #> `stat_mirror_count()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create QQ plots for weighted and unweighted samples — plot_qq","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":"Create quantile-quantile (QQ) plots compare distribution variables treatment groups weighting. function helps assess covariate balance visualizing well quantiles align groups.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":"","code":"plot_qq(   .data,   .var,   .group,   .wts = NULL,   quantiles = seq(0.01, 0.99, 0.01),   include_observed = TRUE,   treatment_level = NULL,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":".data data frame containing variables. .var Variable plot. Can unquoted (e.g., age) quoted (e.g., \"age\"). .group Column name treatment/group variable. Can unquoted (e.g., qsmk) quoted (e.g., \"qsmk\"). .wts Optional weighting variable(s). Can unquoted variable names, character vector, NULL. Multiple weights can provided compare different weighting schemes. Default NULL (unweighted). quantiles Numeric vector quantiles compute. Default seq(0.01, 0.99, 0.01) 99 quantiles. include_observed Logical. using .wts, also show observed (unweighted) QQ plot? Defaults TRUE. treatment_level reference treatment level use comparisons. NULL (default), uses last level factors maximum value numeric variables. na.rm Logical; TRUE, drop NA values computation.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":"ggplot2 object.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":"QQ plots display quantiles one distribution quantiles another. Perfect distributional balance appears points along 45-degree line (y = x). function automatically adds reference line appropriate axis labels. alternative visualization information, see geom_ecdf(), shows empirical cumulative distribution functions directly.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/plot_qq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create QQ plots for weighted and unweighted samples — plot_qq","text":"","code":"library(ggplot2)  # Basic QQ plot (observed) plot_qq(nhefs_weights, age, qsmk)   # With weighting plot_qq(nhefs_weights, age, qsmk, .wts = w_ate)   # Compare multiple weighting schemes plot_qq(nhefs_weights, age, qsmk, .wts = c(w_ate, w_att))   # For propensity scores plot_qq(nhefs_weights, .fitted, qsmk, .wts = w_ate)   # Without observed comparison plot_qq(nhefs_weights, age, qsmk, .wts = w_ate, include_observed = FALSE)"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","title":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","text":"Creates visualization AUC values weighted ROC analysis. Values near 0.5 indicate good balance.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","text":"","code":"plot_roc_auc(   .data,   ref_line = TRUE,   ref_color = \"red\",   point_size = 3,   point_shape = 19 )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","text":".data Output check_auc(). ref_line Show reference line AUC = 0.5? Default TRUE. ref_color Color reference line. Default \"red\". point_size Size points. Default 3. point_shape Shape points. Default 19 (filled circle).","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","text":"ggplot2 object.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ROC AUC Values for Balance Assessment — plot_roc_auc","text":"","code":"# Compute AUC values auc_data <- check_auc(   nhefs_weights,   qsmk,   .fitted,   c(w_ate, w_att) )  # Create plot plot_roc_auc(auc_data)"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":"Creates ggplot2 visualization ROC curves evaluating propensity score balance. causal inference, weighted curves near diagonal (AUC around 0.5) indicate good balance.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":"","code":"plot_roc_curve(   .data,   linewidth = 0.5,   diagonal_color = \"gray50\",   diagonal_linetype = \"dashed\" )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":".data Output roc_curve(). linewidth Width ROC curve lines. Default 1. diagonal_color Color diagonal reference line. Default \"gray50\". diagonal_linetype Line type diagonal. Default \"dashed\".","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":"ggplot2 object.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":"ROC curves balance assessment plot true positive rate (sensitivity) false positive rate (1 - specificity) using propensity scores classify treatment assignment. weights achieve perfect balance, propensity score distributions become identical groups, yielding ROC curve along diagonal (chance performance). Curves deviate substantially diagonal indicate propensity scores can still discriminate treatment groups weighting, suggesting residual imbalance. closer curve diagonal, better balance achieved weighting scheme.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot weighted ROC Curves for Balance Assessment — plot_roc_curve","text":"","code":"roc_data <- roc_curve(   nhefs_weights,   qsmk,   .fitted,   c(w_ate, w_att) )  plot_roc_curve(roc_data)"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create stratified residual diagnostic plots — plot_stratified_residuals","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"Create diagnostic plots assess differences treatment group adjustment. function plots residuals outcome model propensity scores (fitted values), stratified treatment group, reveal model mis-specification.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"","code":"plot_stratified_residuals(x, ...)  # S3 method for class 'lm' plot_stratified_residuals(   x,   treatment,   ps_model = NULL,   plot_type = c(\"color\", \"facet\", \"both\"),   smooth = TRUE,   smooth_span = 1,   alpha = 0.25,   na.rm = FALSE,   ... )  # S3 method for class 'glm' plot_stratified_residuals(   x,   treatment,   ps_model = NULL,   plot_type = c(\"color\", \"facet\", \"both\"),   smooth = TRUE,   smooth_span = 1,   alpha = 0.25,   na.rm = FALSE,   ... )  # S3 method for class 'data.frame' plot_stratified_residuals(   x,   treatment,   residuals,   x_var,   plot_type = c(\"color\", \"facet\", \"both\"),   smooth = TRUE,   smooth_span = 1,   alpha = 0.25,   na.rm = FALSE,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"x Either fitted model object (lm glm) data frame ... Additional arguments passed methods treatment vector indicating treatment group membership. Must exactly two unique levels. data frames, can unquoted column name. ps_model Optional propensity score model (glm object). provided, uses propensity scores instead fitted values. plot_type Character; type plot - \"color\" (default), \"facet\", \"\". \"color\": Single plot points colored treatment \"facet\": Separate facets treatment group \"\": color faceting smooth Logical; whether add loess smoothing curves. Default TRUE. smooth_span Numeric; span parameter loess smoothing. Default 1. alpha Numeric; transparency level points. Default 0.25. na.rm Logical; TRUE, remove missing values plotting. residuals Column containing residuals. Supports tidyselect syntax. x_var Column x-axis values (fitted values propensity scores). Supports tidyselect syntax.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"ggplot2 object","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"diagnostic plot originally suggested Rosenbaum Rubin (1983) revisited D'Agostino McGowan, D'Agostino, D'Agostino (2023). key idea plotting residuals propensity scores fitted values treatment group can reveal non-linear relationships heterogeneous treatment effects might obscured standard residuals-vs-fitted plots. function supports two approaches: regression models (lm/glm): Extracts residuals fitted values automatically data frames: Uses specified columns residuals, treatment, x-axis values","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"Rosenbaum, P. R., & Rubin, D. B. (1983). central role propensity score observational studies causal effects. Biometrika, 70(1), 41-55. D'Agostino McGowan, L., D'Agostino, R. B, Sr., & D'Agostino, R. B, Jr. (2023). Visual Diagnostic Tool Causal Inference. Observational Studies, 9(1), 87-95.","code":""},{"path":[]},{"path":"https://r-causal.github.io/halfmoon/reference/plot_stratified_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create stratified residual diagnostic plots — plot_stratified_residuals","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2)  # Simulate data with treatment effect heterogeneity set.seed(8) n <- 1000 x <- rnorm(n) ps <- plogis(x)  # True propensity score treatment <- rbinom(n, 1, ps) y1 <- 0.5 * x + rnorm(n) y0 <- -0.5 * x + rnorm(n) y <- treatment * y1 + (1 - treatment) * y0  # Method 1: Using model objects # Fit misspecified model (missing interaction) model_wrong <- lm(y ~ treatment + x)  # Plot with fitted values plot_stratified_residuals(   model_wrong,   treatment = treatment,   plot_type = \"both\" )  # Plot with propensity scores ps_model <- glm(treatment ~ x, family = binomial)  plot_stratified_residuals(   model_wrong,   treatment = treatment,   ps_model = ps_model,   plot_type = \"color\" )  # Method 2: Using data frame library(dplyr) plot_data <- data.frame(   treatment = treatment,   residuals = residuals(model_wrong),   fitted_values = fitted(model_wrong),   propensity_score = fitted(ps_model) )  plot_stratified_residuals(   plot_data,   treatment = treatment,   residuals = residuals,   x_var = propensity_score,   plot_type = \"facet\" ) } # }"},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute QQ plot data for weighted and unweighted samples — qq","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":"Calculate quantile-quantile data comparing distribution variable treatment groups. function computes quantiles groups returns tidy data frame suitable plotting analysis.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":"","code":"qq(   .data,   .var,   .group,   .wts = NULL,   quantiles = seq(0.01, 0.99, 0.01),   include_observed = TRUE,   treatment_level = NULL,   na.rm = FALSE )"},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":".data data frame containing variables. .var Variable compute quantiles . Supports tidyselect syntax. .group Column name treatment/group variable. Supports tidyselect syntax. .wts Optional weighting variable(s). Can unquoted variable names (supports tidyselect syntax), character vector, NULL. Multiple weights can provided compare different weighting schemes. Default NULL (unweighted). quantiles Numeric vector quantiles compute. Default seq(0.01, 0.99, 0.01) 99 quantiles. include_observed Logical. using .wts, also compute observed (unweighted) quantiles? Defaults TRUE. treatment_level reference treatment level use comparisons. NULL (default), uses last level factors maximum value numeric variables. na.rm Logical; TRUE, drop NA values computation.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":"tibble columns: method Character. weighting method (\"observed\" weight variable name). quantile Numeric. quantile probability (0-1). treated_quantiles Numeric. quantile value treatment group. untreated_quantiles Numeric. quantile value control group.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":"function computes data needed quantile-quantile plots calculating corresponding quantiles two distributions. computation uses inverse empirical cumulative distribution function (ECDF). weighted data, first computes weighted ECDF inverts obtain quantiles.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/qq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute QQ plot data for weighted and unweighted samples — qq","text":"","code":"# Basic QQ data (observed only) qq(nhefs_weights, age, qsmk) #> # A tibble: 99 × 4 #>    method   quantile treated_quantiles untreated_quantiles #>    <fct>       <dbl>             <dbl>               <dbl> #>  1 observed     0.01                25                25   #>  2 observed     0.02                25                25   #>  3 observed     0.03                26                25   #>  4 observed     0.04                26                25.5 #>  5 observed     0.05                27                26   #>  6 observed     0.06                27                26   #>  7 observed     0.07                28                26   #>  8 observed     0.08                28                27   #>  9 observed     0.09                29                27   #> 10 observed     0.1                 29                28   #> # ℹ 89 more rows  # With weighting qq(nhefs_weights, age, qsmk, .wts = w_ate) #> # A tibble: 198 × 4 #>    method   quantile treated_quantiles untreated_quantiles #>    <fct>       <dbl>             <dbl>               <dbl> #>  1 observed     0.01                25                25   #>  2 observed     0.02                25                25   #>  3 observed     0.03                26                25   #>  4 observed     0.04                26                25.5 #>  5 observed     0.05                27                26   #>  6 observed     0.06                27                26   #>  7 observed     0.07                28                26   #>  8 observed     0.08                28                27   #>  9 observed     0.09                29                27   #> 10 observed     0.1                 29                28   #> # ℹ 188 more rows  # Compare multiple weighting schemes qq(nhefs_weights, age, qsmk, .wts = c(w_ate, w_att)) #> # A tibble: 297 × 4 #>    method   quantile treated_quantiles untreated_quantiles #>    <fct>       <dbl>             <dbl>               <dbl> #>  1 observed     0.01                25                25   #>  2 observed     0.02                25                25   #>  3 observed     0.03                26                25   #>  4 observed     0.04                26                25.5 #>  5 observed     0.05                27                26   #>  6 observed     0.06                27                26   #>  7 observed     0.07                28                26   #>  8 observed     0.08                28                27   #>  9 observed     0.09                29                27   #> 10 observed     0.1                 29                28   #> # ℹ 287 more rows"},{"path":"https://r-causal.github.io/halfmoon/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tidyselect contains, ends_with, everything, last_col, matches, num_range, one_of, peek_vars, starts_with tidysmd bind_matches, geom_love, love_plot, tidy_smd","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve for Causal Inference — roc_curve","title":"ROC Curve for Causal Inference — roc_curve","text":"Computes ROC curves (weighted unweighted) evaluating propensity score balance. causal inference, ROC curve near diagonal (AUC around 0.5) indicates good balance treatment groups.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve for Causal Inference — roc_curve","text":"","code":"roc_curve(   .data,   .truth,   .estimate,   .wts = NULL,   include_observed = TRUE,   na.rm = TRUE,   treatment_level = NULL )"},{"path":"https://r-causal.github.io/halfmoon/reference/roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve for Causal Inference — roc_curve","text":".data data frame containing variables. .truth treatment/outcome variable (unquoted). .estimate propensity score covariate (unquoted). .wts Optional weighting variables (unquoted, can multiple). include_observed Include unweighted results? Default TRUE. na.rm Remove missing values? Default TRUE. treatment_level level .truth consider treatment/event. Default NULL, uses second level.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/roc_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ROC Curve for Causal Inference — roc_curve","text":"tibble ROC curve data.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_qq2.html","id":null,"dir":"Reference","previous_headings":"","what":"QQ2 Plot Stat — stat_qq2","title":"QQ2 Plot Stat — stat_qq2","text":"Statistical transformation QQ plots.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_qq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QQ2 Plot Stat — stat_qq2","text":"","code":"stat_qq2(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE,   quantiles = seq(0.01, 0.99, 0.01),   treatment_level = NULL,   include_observed = FALSE,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/stat_qq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QQ2 Plot Stat — stat_qq2","text":"mapping Set aesthetic mappings. data Data frame. geom Geometric object use. Default \"point\". position Position adjustment. na.rm Remove missing values? Default TRUE. show.legend Show legend? Default NA. inherit.aes Inherit aesthetics? Default TRUE. quantiles Numeric vector quantiles compute. treatment_level reference treatment level use comparisons. include_observed compatibility qq(). weights present, determines additional \"observed\" group added. Default FALSE stat_qq2 avoid duplication using facets/colors. ... Additional arguments.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_qq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QQ2 Plot Stat — stat_qq2","text":"ggplot2 layer.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve Stat — stat_roc","title":"ROC Curve Stat — stat_roc","text":"Statistical transformation ROC curves.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve Stat — stat_roc","text":"","code":"stat_roc(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = TRUE,   show.legend = NA,   inherit.aes = TRUE,   treatment_level = NULL,   ... )"},{"path":"https://r-causal.github.io/halfmoon/reference/stat_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve Stat — stat_roc","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. data data displayed layer. NULL, default, data inherited plot data specified call ggplot(). geom Geometric object use. Default \"path\". position Position adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend Logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables. ... arguments passed layer().","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/stat_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ROC Curve Stat — stat_roc","text":"ggplot2 layer.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/treatment_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Documentation for Treatment Level — treatment_param","title":"Parameter Documentation for Treatment Level — treatment_param","text":"Parameter Documentation Treatment Level","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/treatment_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Documentation for Treatment Level — treatment_param","text":"treatment_level level outcome variable consider treatment/event. NULL (default), uses last level factors maximum value numeric variables.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/weighted_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute weighted quantiles — weighted_quantile","title":"Compute weighted quantiles — weighted_quantile","text":"Calculate quantiles numeric vector associated weights. function sorts values computes weighted cumulative distribution interpolating requested quantiles.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/weighted_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute weighted quantiles — weighted_quantile","text":"","code":"weighted_quantile(values, quantiles, .wts)"},{"path":"https://r-causal.github.io/halfmoon/reference/weighted_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute weighted quantiles — weighted_quantile","text":"values Numeric vector values compute quantiles . quantiles Numeric vector probabilities values 0 1. .wts Numeric vector non-negative weights, length values.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/weighted_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute weighted quantiles — weighted_quantile","text":"Numeric vector weighted quantiles corresponding requested probabilities.","code":""},{"path":"https://r-causal.github.io/halfmoon/reference/weighted_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute weighted quantiles — weighted_quantile","text":"","code":"# Equal weights (same as regular quantiles) weighted_quantile(1:10, c(0.25, 0.5, 0.75), rep(1, 10)) #> [1] 2.5 5.0 7.5  # Weighted towards higher values weighted_quantile(1:10, c(0.25, 0.5, 0.75), 1:10) #> [1] 4.750000 6.928571 8.583333"},{"path":"https://r-causal.github.io/halfmoon/news/index.html","id":"halfmoon-0109000","dir":"Changelog","previous_headings":"","what":"halfmoon 0.1.0.9000","title":"halfmoon 0.1.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
